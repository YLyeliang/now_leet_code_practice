# 经典的斐波那契问题（爬阶梯）：n个阶梯，一次可上一层或两层，有多少种上法。
# 分解之后：可以得知，n个台阶的上法为F(N)种，其结果F(N)=F(N-1)+F(N-2)。因为上n个阶梯之前，只有两种情况，一种是还有一层可以上，一种是还有两层阶梯可以上。
# 逐次分解，得到F(3)=F(2)+F(1)，其中F(1)=1,F(2)=2为初始化的解，通过这几个初始解，可以推广到情况为n时的结果。

class Solution:
    def fibonacci(self,n):
        a,b=1,1
        for i in range(n):
            a,b=b,a+b  # 这个写法是两个计算并行处理  与 a=b b=a+b结果不同。
        return a
